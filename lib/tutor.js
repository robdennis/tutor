// Generated by CoffeeScript 1.7.1
(function() {
  var Q, gatherer, name, tutor, _, _i, _len, _ref;

  Q = require('q');

  _ = require('underscore');

  gatherer = require('./gatherer');

  tutor = module.exports;

  _ref = ['formats', 'set', 'sets', 'types'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    name = _ref[_i];
    tutor[name] = gatherer[name];
  }

  tutor.card = function(details, callback) {
    switch (false) {
      case !_.isNumber(details):
        details = {
          id: details
        };
        break;
      case !_.isString(details):
        details = {
          name: details
        };
    }
    return Q.all(_.map([gatherer.card, gatherer.languages, gatherer.printings], function(fn) {
      var deferred;
      deferred = Q.defer();
      fn(details, deferred.makeNodeResolver());
      return deferred.promise;
    })).then(function(_arg) {
      var card, languages, legality, versions, _ref1;
      card = _arg[0], languages = _arg[1], (_ref1 = _arg[2], legality = _ref1.legality, versions = _ref1.versions);
      if ('name' in details && card.name !== details.name) {
        return tutor.card(_.extend(_.omit(details, 'name'), _.pick(card, 'name')), callback);
      } else {
        return callback(null, _.extend({
          languages: languages,
          legality: legality,
          versions: versions
        }, card));
      }
    })["catch"](callback);
  };

}).call(this);
